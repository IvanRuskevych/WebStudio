@mixin centeredFlex($typeFlex: flex, $jc: center, $ai: center) {
  display: $typeFlex;
  justify-content: $jc;
  align-items: $ai;
}
@mixin gridFlexWrap($gap: 30px) {
  display: flex;
  flex-wrap: wrap;
  gap: $gap;
}

@mixin mainTextStyle($fontFamyly, $weight, $size, $height, $spacing) {
  font-family: $fontFamyly;
  font-weight: $weight;
  font-size: $size;
  line-height: calc($height/$size);
  letter-spacing: $spacing;
}

@mixin mainTransition($property) {
  transition: $property 250ms cubic-bezier(0.4, 0, 0.2, 1);
}

@mixin twopropertyTransition($firstproperty, $secondproperty) {
  transition: $firstproperty 250ms cubic-bezier(0.4, 0, 0.2, 1),
    $secondproperty 250ms cubic-bezier(0.4, 0, 0.2, 1);
}

@mixin borderType($b-color, $l-width: 1px) {
  border: $l-width solid $b-color;
}

@mixin mq($type) {
  $mobile: 480px;
  $tablet: 768px;
  $desktop: 1200px;

  @if $type == 'mob' {
    @media screen and (min-width: $mobile) {
      @content;
    }
  }

  @if $type == 'mob-only' {
    @media screen and (max-width: ($tablet - 0.02)) {
      @content;
    }
  }

  @if $type == 'tab' {
    @media screen and (min-width: $tablet) {
      @content;
    }
  }

  @if $type == 'tab-only' {
    @media screen and (min-width: $tablet) and (max-width: ($desktop - 0.02)) {
      @content;
    }
  }

  @if $type == 'desk' {
    @media screen and (min-width: $desktop) {
      @content;
    }
  }

  @if $type == 'not-desk' {
    @media screen and (max-width: ($desktop - 0.02)) {
      @content;
    }
  }

  @if $type == 'mob-befor' {
    @media screen and (max-width: ($mobile - 0.02)) {
      @content;
    }
  }

  @if $type == 'mob-tab' {
    @media screen and (min-width: $mobile) and (max-width: ($desktop - 0.02)) {
      @content;
    }
  }
}
